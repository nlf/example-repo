name: nightly nodejs ci
on:
  workflow_dispatch:
  release:
    types:
      - published
  schedule:
    # "At 23:00 UTC" https://crontab.guru/#0_23_*_*_*
    - cron: '0 23 * * *'

jobs:
  install-nightly:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download Node nightly
        uses: actions/github-script@v6
        with:
          script: |
            const localDir = `${process.env.RUNNER_TEMP}/nodejs`
            await io.mkdirP(localDir)

            // find the version of the latest nightly
            core.startGroup('finding latest nightly version')
            await exec.exec('curl', ['-o', `${localDir}/nightlies.json`, 'https://nodejs.org/download/nightly/index.json'])
            const availableNightlies = require(`${localDir}/nightlies.json`)
            const { version } = availableNightlies[0]
            core.endGroup()

            // download the source tarball
            core.startGroup(`downloading nodejs ${version}`)
            const filename = `node-${version}.tar.xz`
            const target = `${localDir}/${filename}`
            await exec.exec('curl', ['-o', target, `https://nodejs.org/download/nightly/${version}/${filename}`])
            core.endGroup()

            // extract the source
            core.startGroup('extracting source')
            await exec.exec('tar', ['xf', target, '--strip=1', '-C', localDir])
            core.endGroup()
      - name: Update bundled npm
        uses: actions/github-script@v6
        with:
          script: |
            core.startGroup('packing an npm tarball')
            let filename = ''
            await exec.exec('npm', ['pack', '--loglevel=silent'], {
              listeners: {
                stdout: (data) => {
                  filename += data
                },
              },
            })
            filename = filename.trim()
            core.endGroup()

            const localDir = `${process.env.RUNNER_TEMP}/nodejs`

            core.startGroup('removing old npm')
            await io.rmRF(`${localDir}/deps/npm`)
            await io.mkdirP(`${localDir}/deps/npm`)
            core.endGroup()

            core.startGroup('updating to new npm')
            await exec.exec('tar', ['xf', filename, '-C', `${localDir}/deps/npm`, '--strip=1'])
            core.endGroup()
      - name: Test
        run: |
          cd "${RUNNER_TEMP}/nodejs"
          ./configure
          make test-only
