name: Update a thing

on:
  pull_request:

permissions:
  contents: write
  checks: write

jobs:
  update:
    runs-on: ubuntu-latest
    outputs:
      has-changes: ${{ steps.status.outputs.has-changes }}
      commit-ref: ${{ steps.commit.outputs.commit-ref }}
      created-runs: ${{ steps.create-runs.outputs.created-runs }}
    steps:
      - uses: actions/checkout@v3
      - name: Maybe make some changes
        run: |
          if [[ $((RANDOM%2)) -eq 1 ]]; then
            echo "t.pass('ran again')" >> test/index.js
          fi
      - name: Check for changes
        id: status
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            echo "::set-output name=has-changes::true"
          fi
      - name: Commit and push changes
        id: commit
        if: steps.status.outputs.has-changes == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr checkout ${{ github.event.pull_request.number }}
          git add test/index.js
          git config --local user.email "ops+npm-cli@npmjs.com"
          git config --local user.name "npm cli ops bot"
          git commit -m 'chore: add a test'
          git push
          echo "::set-output name=commit-ref::$(git rev-parse HEAD)"
      - name: Create check runs on future commit
        id: create-runs
        if: steps.status.outputs.has-changes == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          CREATED_RUNS=""
          CHECKSUITE_ID=$(gh api /repos/{owner}/{repo}/actions/runs/${{ github.run_id }} --jq .check_suite_id)
          echo "Getting check-runs for suite $CHECKSUITE_ID"
          gh api /repos/{owner}/{repo}/check-suites/$CHECKSUITE_ID/check-runs --jq '.check_runs.[].name' | while read CHECK; do
            CHECK_ID=$(gh api /repos/{owner}/{repo}/check-runs -f name="$CHECK" -f head_sha=${{ steps.status.outputs.commit-ref }} -f status=in_progress --jq '.id')
            CREATED_RUNS="${CREATED_RUNS},${CHECK_ID}"
          done
          echo "::set-output name=created-runs::$CREATED_RUNS"

  lint:
    needs: update
    if: needs.update.outputs.has-changes == 'true'
    uses: ./.github/workflows/lint.yml
    with:
      ref: ${{ needs.update.outputs.commit-ref }}

  test:
    needs: update
    if: needs.update.outputs.has-changes == 'true'
    uses: ./.github/workflows/test.yml
    with:
      ref: ${{ needs.update.outputs.commit-ref }}

  create-run:
    if: ${{ needs.update.outputs.has-changes == 'true' }}
    needs:
      - update
      - lint
      - test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Create check run
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Runs that need updated: ${{ needs.update.outputs.created-runs }}"
          CHECKSUITE_ID=$(gh api /repos/{owner}/{repo}/actions/runs/${{ github.run_id }} --jq .check_suite_id)
          echo "Getting check-runs for suite $CHECKSUITE_ID"
          gh api /repos/{owner}/{repo}/check-suites/$CHECKSUITE_ID/check-runs --jq '.check_runs.[] | [.id, .name, .status, .conclusion] | join("|")' | while read CHECK; do
            ID=${CHECK%%|*}
            CHECK=${CHECK:${#ID}+1}
            NAME=${CHECK%%|*}
            CHECK=${CHECK:${#NAME}+1}
            STATUS=${CHECK%%|*}
            CHECK=${CHECK:${#STATUS}+1}
            CONCLUSION=$CHECK
            if [[ "$STATUS" == "completed" ]]; then
              echo "Would create run for ID=$ID NAME=$NAME STATUS=$STATUS CONCLUSION=$CONCLUSION"
            fi
          done
          # gh api /repos/{owner}/{repo}/check-runs \
          #   -f name="update" \
          #   -f head_sha="${{ needs.update.outputs.commit-ref }}" \
          #   -f status=completed \
          #   -f conclusion="${{ job.status }}"
